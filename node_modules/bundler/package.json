{
  "name": "bundler",
  "description": "Bundler. It is better for you to not know what it is.",
  "version": "0.8.0",
  "homepage": "https://github.com/mihaild/ybundler",
  "author": {
    "name": "Mikhail Dektyarev",
    "email": "mihail.dektyarow@gmail.com",
    "url": "https://github.com/mihaild/"
  },
  "maintainers": [],
  "directories": {
    "lib": "./lib",
    "bin": "./bin"
  },
  "main": "./lib/bundler.js",
  "bin": {
    "bundler": "./bin/bundler"
  },
  "dependencies": {
    "coa": ">= 0.1.1"
  },
  "devDependencies": {
    "vows": ">= 0.0.0"
  },
  "engines": [
    "node ~0.4.0"
  ],
  "licenses": [
    {
      "type": "AS IS"
    }
  ],
  "readme": "# Bundler\n\nНа сайте вам нужны некоторые дополнительные файлы (например, JS или CSS) на каждой странице. Для разных страниц нужны разные файлы, но некоторые файлы нужны сразу на нескольких страницах. Вы можете объединить несколько файлов в один 'бандл'.\n\nПользовательский браузер использует кеш, так что бандлы, которые уже загружены, повторо загружаться не будут. Например, если Вы сольете все файлы с сайта в один бандл, то он загрузится при посещении первой страницы, и остальные страницы буду загружаться быстрее.\n\nНо, если пользователь, например, зайдет только на одну страницу сайта, то такой метод приведет к сильному увеличению времени загрузки для этой конкретной страницы, что плохо.\n\nЕсли не объединять ничего, то пользователю точно не придется загружать никаких лишних данных, но на каждой странице будет загружаться куча файлов, а это нехорошо.\n\nТаким образом, нужен некоторый компромиссный вариант - что-то объединять, что-то нет. Этот модуль ищет такой вариант с помощью генетического программирования.\n\nСчитается, что время загрукзи страницы определяется количеством файлов и их размером, и нужно минимизировать среднее по всем пользователям время загрузки.\n\nКроме того, между файлами могут быть зависимости: файл2 может зависет от файла1, что означает, что на странице файл1 должен быть раньше чем файл2. Если найденный бандлинг не удовлетворяет зависимостям, то модуль об этом сообщает, но не пытается исправить ситуацию. Для более удобной работы с зависимостями есть \"метафайлы\", которые не соответствуют реальным файлам, но могут иметь зависимости. Зависимости могут быть разными для разных страниц.\n\n## Формат ввода-вывода\n\n- Данные по странице с названием 'PAGE' должны лежать в файле 'PAGE.deps-sets.js' в следующем формате:\n\n```javascript\nexports.depsSets = {\n\t\"file1\": {\n\t\t'deps': ['file2', 'metafile1'],\n\t\t'size': 1000,\n\t},\n\t\"file2\": {\n\t\t'deps': [],\n\t\t'size': 666,\n\t},\n\t'file3': {\n\t\t'deps': [],\n\t\t'size': 13\n\t},\n\t'metafile1': {\n\t\t'deps': ['metafile2'],\n\t},\n\t'metafile2': {\n\t\t'deps': ['file3'],\n\t},\n}\n```\n\nЧто означает: страница состоит из 3х файлов 'file1', 'file2' и 'file3'. Причем 'file1' зависит (после раскрытия зависимостей) от 'file2' и 'file3'.\nМетафайлы характеризуются тем, что для них не задано поле 'size'.\n\nРазмер указывается в байтах.\n\n- Логи по сессиям должны быть в следующем формате:\n\n```javascript\nexports.sessions = [\n\t['user1', 'page1', 0],\n\t['user2', 'page2', 3],\n\t['user1', 'page3', 5],\n];\n```\n\nГде каждый элемент имеет формат [ID пользователя, посещенная страница, время визита (timestamp).\n\n- Запуск в следующем формате:\n\nbundler [**--file-cost**=*FILE_COST*] [**--kb-cost**=*KB_COST*] [**--max-pause**=*MAX_PAUSE*] [**--debug**] **-s**|**--sessions**=*SESSIONS* [**-o**|**--output**=*OUTPUT*] **page1.deps-sets.js** **page2.deps-sets.js**\n\n+ **FILE_COST** - стоимость загрузки одного файла в тугриках; по умолчанию 10.\n+ **KB_COST** - стоимость загрузки одного килобайта в тугриках; по умолчанию 2.\n+ **MAX_PAUSE** - время жизни сессии в секундах; по умолчанию 3600 (один час). Считается, что если юзер никуда не заходил в течении этого времени, то кеш сбрасывается.\n+ **--debug** - выводит отладочную информацию: стоимости \"наивных\" бандлингов, стоимости лучших вариантов по поколениям, и т.д.\n+ **OUTPUT** - файл для вывода результата; если не задан, или указан '-', то используется stdout. Учитывается только если не задан параметр 'debug'.\n+ **SESSIONS** - модуль с сессиями в оговоренном формате.\n+ **page.deps-sets.js** - файлы с данными по страницам. HINT: если они лежат в одной директории и Вы используете, например, bash, то можно указывать pages/*.\n\n- Формат вывода (при выключенном режиме отладки):\n\n```javascript\nexports.bundling = {\n\t\"bundles\": [\n\t\t['file1', 'file2'],\n\t\t['file1', 'file3'],\n\t\t['file4'],\n\t],\n\t\"pages\": {\n\t\t\"page1\" : [0, 2],\n\t\t\"page2\": [2],\n\t\t\"page3\": [1, 0, 2],\n\t}\n};\n```\n\nБандлы выводятся в таком порядке, чтобы не были нарушены зависимости.\nЕсли найденный бандлинг невозможно упорядочить с удовлетворением зависимостей - скрипт бросает исключение 'Bundles are not consistent'.\n\n## API\nМодуль **bundler.js** предоставляет функцию `get_bundling(config, args, main_generator, return_result)`.\n*config* - это объект следующего вида:\n\n```javascript\nconfig = {\n\tsessions: [...],\n\tfile_cost: 10,\n\tkb_cost: 2,\n\tmax_pause: 3600,\n\toutput: ...\n};\n```\n\nОпции соответствуют опциям при запуске из командной строки, только sessions должно быть массивом, а не файлом, и output должен быть объектом файла.\n*args* - список страниц в виде\n\n```javascript\n[\n\t['page1', depsSets1],\n\t['page2', depsSets2],\n]\n```\n\nГде *depsSets* - объекты в описанном выше формате.\n*main_generator* - может быть *mega* для запуска генетического алгоритма, или *all*, *none*, *every* для получения \"наивного\" результата. *all* - слить все файлы в один бандл, *none* - каждый файл соответствует бандлу, *every* - для каждый страницы свой один бандл, содержащий в точности файлы с этой страницы.\nЕсли *return_result* истинно, то вместо вывода результата работы он возвращается в виде словаря с полями *cost* и *bundling*.",
  "readmeFilename": "README.md",
  "_id": "bundler@0.8.0",
  "dist": {
    "shasum": "59d41aab5b98641b8521291e6b95f0a0f0d71a2e"
  },
  "_from": "bundler@",
  "_resolved": "https://registry.npmjs.org/bundler/-/bundler-0.8.0.tgz"
}
